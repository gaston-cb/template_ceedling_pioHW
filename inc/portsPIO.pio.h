// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif
#include "pio_dependences/hardware_pio/include/hardware/pio.h"
// -------- //
// AMT223BV //
// -------- //

#define AMT223BV_wrap_target 0
#define AMT223BV_wrap 9

static const uint16_t AMT223BV_program_instructions[] = {
            //     .wrap_target
    0xf82e, //  0: set    x, 14           side 3     
    0xd922, //  1: irq    wait 2          side 3 [1] 
    0xa842, //  2: nop                    side 1     
    0xa442, //  3: nop                    side 0 [4] 
    0xaa42, //  4: nop                    side 1 [2] 
    0x4901, //  5: in     pins, 1         side 1 [1] 
    0x0444, //  6: jmp    x--, 4          side 0 [4] 
    0xaa42, //  7: nop                    side 1 [2] 
    0x4901, //  8: in     pins, 1         side 1 [1] 
    0xc810, //  9: irq    nowait 0 rel    side 1     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program AMT223BV_program = {
    .instructions = AMT223BV_program_instructions,
    .length = 10,
    .origin = -1,
};

static inline pio_sm_config AMT223BV_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + AMT223BV_wrap_target, offset + AMT223BV_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}

//#include "hardware/gpio.h"
///! portclk - 1 
static inline void AMT223BV_init_hw(PIO pio, uint sm, uint prog_offs, uint n_bits,
                                    uint pin_clk,uint pin_data)
{ 
    uint pin_cs = pin_clk + 1 ;     
    pio_sm_config c = AMT223BV_program_get_default_config(prog_offs);
    sm_config_set_clkdiv(&c, 62.5f); //0.1us --> 500us 5 ticks ! 
    sm_config_set_sideset_pins(&c, pin_cs)         ;
    sm_config_set_sideset_pins(&c,pin_clk)         ;
    sm_config_set_in_pins(&c , pin_data)           ;  
    sm_config_set_in_shift(&c, false, true, n_bits);
    pio_sm_set_pins_with_mask(pio, sm, (1u<<pin_cs) | (1u<<pin_clk) | (1u<<pin_data),  (1u<<pin_cs) | (1u<<pin_clk) | (1u<<pin_data) );
    pio_sm_set_pindirs_with_mask(pio, sm,(1u<<pin_cs) | (1u<<pin_clk) | (1u<<pin_data),  (1u<<pin_cs) | (1u<<pin_clk) | (0u<<pin_data));
    pio_gpio_init(pio,pin_clk) ; 
    pio_gpio_init(pio,pin_data) ; 
    pio_gpio_init(pio,pin_cs) ; 
    pio_sm_init(pio, sm, prog_offs, &c) ; 
    pio_sm_set_enabled(pio, sm, true);
}

#endif

